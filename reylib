#include "raylib.h"

#define SIZE 10

enum {
    NONE,
    SNAKE,
    APPLE
};

enum {
    UP,
    DOWN,
    LEFT,
    RIGHT
};

void fillWithZeros(int grid[SIZE][SIZE]) {
    for (int i = 0; i<SIZE; i++){
        for (int j = 0; j < SIZE; j++) {
            grid[i][j] = 0;
        }
    }
}

void initSnake(int grid[SIZE][SIZE], int* direction,
               Vector2* head, Vector2* tail) {
    fillWithZeros(grid);
    grid[5][5] = SNAKE;
    grid[4][5] = SNAKE;

    *direction = DOWN;
    head->x = 5;
    head->y = 5;
    tail->x = 4;
    tail->y = 5;
}

int drawGrid (int grid[SIZE][SIZE]) {
    for (int i = 0; i<SIZE; i++){
        for (int j = 0; j < SIZE; j++) {
            switch (grid[i][j]) {
                case SNAKE:
                    DrawRectangle(i*20, j*20, 20, 20, GREEN);
                    break;

            }
        }
    }
}

int getInput (int direction) {
    if (IsKeyDown(KEY_UP)) {
        return UP;
    } else if (IsKeyDown(KEY_DOWN)) {
        return DOWN;
    } else if (IsKeyDown(KEY_RIGHT)) {
        return RIGHT;
    } else if (IsKeyDown(KEY_LEFT)) {
        return LEFT;
    }

    return direction;
}

void updateSnake(int grid[SIZE][SIZE], int* direction,
                 Vector2* head, Vector2* tail) {

    grid[(int)tail->x][(int)tail->y] = NONE;

    if (grid[(int)tail->x+1][(int)tail->y] == SNAKE) {
        tail ->x +=1;
    } else if (grid[(int)tail->x-1][(int)tail->y] == SNAKE) {
        tail ->x -=1;
    } else if (grid[(int)tail->x][(int)tail->y+1] == SNAKE) {
        tail ->y +=1;
    } else if (grid[(int)tail->x][(int)tail->y-1] == SNAKE) {
        tail ->y -=1;
    }

    switch (*direction) {
        case UP:
            grid[(int)head->x][(int)head->y+1] = SNAKE;
            head->y -=1;
            break;
        case DOWN:
            grid[(int)head->x][(int)head->y-1] = SNAKE;
            head->y +=1;
            break;
        case LEFT:
            grid[(int)head->x -1][(int)head->y] = SNAKE;
            head->x -=1;
            break;
        case RIGHT:
            grid[(int)head->x+1][(int)head->y] = SNAKE;
            head->x +=1;
            break;
    }
}

int main(void) {
    InitWindow(SIZE*20,SIZE*20,"peppa");
    SetTargetFPS(60);

    int grid[SIZE][SIZE];
    int direction;
    Vector2 head;
    Vector2 tail;
    initSnake(grid, &direction, &head, &tail);
    float time = 0;

    while   (!WindowShouldClose()) {
        time += GetFrameTime();
        if (time >=1){
            time-=1;
            updateSnake(grid, &direction, &head, &tail);
        }
        direction = getInput(direction);

        BeginDrawing();
        ClearBackground(BLACK);

        drawGrid(grid);

        EndDrawing();
    }

    CloseWindow();
    return 0;
}
